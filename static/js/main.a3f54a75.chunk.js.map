{"version":3,"sources":["components/Sidebar.js","components/Window.js","components/About.js","components/Projects.js","index.js","components/Contact.js"],"names":["Icon","props","onClick","openWindow","to","className","imgSrc","src","alt","atlTxt","txt","Sidebar","Nav","Item","Window","move","x","y","setState","state","this","onMove","id","toggleWindowShowing","contentClass","children","React","Component","throttle","f","token","lastArgs","invoke","result","args","requestAnimationFrame","cancel","cancelAnimationFrame","Draggable","_relX","_relY","_ref","createRef","_onMouseDown","event","header","document","getElementById","x_button","parentNode","querySelector","button","body","scrollLeft","scrollTop","clientLeft","clientTop","current","getBoundingClientRect","left","top","pageX","pageY","addEventListener","_onMouseMove","_onMouseUp","preventDefault","removeEventListener","_update","style","transform","ref","PureComponent","About","showing","href","target","Projects","projects","title","type","techs","desc","date","link","exists","git","url","map","project","i","key","Project","projectExpanded","toggleDescShowing","bind","tech","App","showingWindow","prevState","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.a3f54a75.chunk.js","sourcesContent":["import React from \"react\";\nimport {Nav} from \"react-bootstrap\";\nimport { Link } from \"@reach/router\";\n\nconst Sidebar = (props) => (\n    <>\n        <Nav className=\"sidebar\">\n            <Nav.Item className='noselect desktop_icon'>\n                <Icon\n                    openWindow={props.openWindow}\n                    imgSrc='/icons8-txt-50.png'\n                    atlTxt='about icon'\n                    to='/'\n                    txt='about'\n                />\n            </Nav.Item>\n            <Nav.Item className='noselect desktop_icon'>\n                <Icon\n                    openWindow={props.openWindow}\n                    imgSrc='/icons8-folder-48.png'\n                    atlTxt='projects icon'\n                    to='projects'\n                    txt='projects'\n                />\n            </Nav.Item>\n        </Nav>\n    </>\n)\nconst Icon = (props) => (\n    <>\n        <Link onClick={props.openWindow} to={props.to} >\n            <img className={props.imgSrc} src={props.imgSrc} alt={props.atlTxt} />\n            <br />\n            {props.txt}\n        </Link>\n    </>\n)\n\n\nexport default Sidebar\n","import React from 'react';\n\nclass Window extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            x: 0,\n            y: 0\n        }\n    }\n    move = (x, y) => this.setState({x, y});\n    render() {\n        const {x, y} = this.state;\n        return (\n            <>\n                <Draggable x={x} y={y} onMove={this.move}>\n                    <div className={\"window \" + this.props.className}>\n                        <div id='window-header' className=\"window-header\">\n                            <span>\n                                <button id='esc-btn' className=\"esc-btn text-center\" onClick={this.props.toggleWindowShowing}>\n                                    X\n                                </button>\n                            </span>\n                        </div>\n                    \t<div className={this.props.contentClass}>\n                    \t\t{this.props.children}\n                    \t</div>\n                    </div>\n                </Draggable>\n            </>\n        )\n    }\n}\n\nconst throttle = (f) => {\n    let token = null, lastArgs = null;\n    const invoke = () => {\n        f(...lastArgs);\n        token = null;\n    };\n    const result = (...args) => {\n        lastArgs = args;\n        if (!token) {\n            token = requestAnimationFrame(invoke);\n        }\n    };\n    result.cancel = () => token && cancelAnimationFrame(token);\n    return result;\n};\n\nclass Draggable extends React.PureComponent {\n    // component from SO answer https://stackoverflow.com/questions/20926551/recommended-way-of-making-react-component-div-draggable\n    // by user polkovnikov.ph\n    _relX = 0;\n    _relY = 0;\n    _ref = React.createRef();\n\n\n    _onMouseDown = (event) => {\n        // only want to be able to drag window by the 'window-header'\n        var header = document.getElementById(\"window-header\");\n        var x_button = document.getElementById(\"esc-btn\");\n        if ((header.parentNode.querySelector(\":hover\") !== header) ||\n            (x_button.parentNode.querySelector(\":hover\") === x_button)) {\n            return\n        }\n        if (event.button !== 0){\n            return;\n        }\n        const {scrollLeft, scrollTop, clientLeft, clientTop} = document.body;\n        // Try to avoid calling `getBoundingClientRect` if you know the size\n        // of the moving element from the beginning. It forces reflow and is\n        // the laggiest part of the code right now. Luckily it's called only\n        // once per click.\n        const {left, top} = this._ref.current.getBoundingClientRect();\n        this._relX = event.pageX - (left + scrollLeft - clientLeft);\n        this._relY = event.pageY - (top + scrollTop - clientTop);\n        document.addEventListener('mousemove', this._onMouseMove);\n        document.addEventListener('mouseup', this._onMouseUp);\n        event.preventDefault();\n    };\n\n    _onMouseUp = (event) => {\n        document.removeEventListener('mousemove', this._onMouseMove);\n        document.removeEventListener('mouseup', this._onMouseUp);\n        event.preventDefault();\n    };\n\n    _onMouseMove = (event) => {\n        this.props.onMove(\n            event.pageX - this._relX,\n            event.pageY - this._relY,\n        );\n        event.preventDefault();\n    };\n\n    _update = throttle(() => {\n        const {x, y} = this.props;\n        this._ref.current.style.transform = `translate(${x}px, ${y}px)`;\n    });\n\n    componentDidMount() {\n        this._ref.current.addEventListener('mousedown', this._onMouseDown);\n        this._update();\n    }\n\n    componentDidUpdate() {\n        this._update();\n    }\n\n    componentWillUnmount() {\n        this._ref.current.removeEventListener('mousedown', this._onMouseDown);\n        this._update.cancel();\n    }\n\n    render() {\n        return (\n            <div className=\"draggable\" ref={this._ref}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nexport default Window\n","import React from 'react';\nimport Window from './Window'\n\nclass About extends React.Component {\n    render() {\n        return (\n            <>\n                <Window\n                    contentClass = 'window-content'\n                    className={'about-window ' + (this.props.showing ? '' : 'd-none')}\n                    toggleWindowShowing={this.props.toggleWindowShowing}\n                >\n                    <h2>> whoami</h2>\n                    <ul>\n                        <li>\n                            I'm a student studying\n                            computing science at the University of Alberta.\n                        </li>\n                        <li>\n                            I'm interested in all parts of the SDLC from development, \n                            CI/CD, security, operations, and even more interested in when these things intersect.\n                        </li>\n                    </ul>\n                    <p>\n                        Check out my work at:\n                        <a href='https://github.com/signed-long' target=\"_blank\">\n                            <img className='small-icon' src='gh.png' alt='github icon'/>\n                        </a>\n                        <a href='https://www.linkedin.com/in/michael-long-5a1623160/' target=\"_blank\">\n                            <img className='small-icon' src='li.png' alt='linkedin icon'/>\n                        </a>\n                    </p>\n                </Window>\n            </>\n        )\n    }\n}\n\n\nexport default About\n","import React from 'react';\nimport Window from './Window'\n\nclass Projects extends React.Component {\n    constructor () {\n        super();\n        this.projects = [\n            {   title: 'Istio End-User Authorization Demo',\n                type: 'DevOps',\n                techs: ['Kubernetes', 'Istio', \"Helm\", 'Github Actions', 'Flask'],\n                desc: [\n                    `A simple application where a user can GET private routes only after being authenticated and possessing a valid, signed JWT token.`,\n                    `Deployed with helm to a local kubernetes cluster with support for automated database migrations.`,\n                    `Made up of two Flask microservices with CI pipelines using GitHub actions and Github Container Registry.`,\n                    `Istio Gateway and AuthorizationPolicy are used to move JWT verification and authorization logic out of application code.`\n                ],\n                date: '2022',\n                link: {exists: true, git: true, url: 'https://github.com/signed-long/istio-auth-example'}\n            },\n            {   title: 'TapeFlip.app',\n                type: 'web',\n                techs: ['Python', 'Flask', \"Bootstrap\", 'Twillio'],\n                desc: [\n                    `Full-stack web application for music producers to upload their\n                    sounds to be recorded on old tape machines.\n                    Giving their music an authentic vintage sound.`,\n                    `Features include user login, uploading and downloading files,\n                    notifications via email and SMS powered by Twillio’s Api/SDK,\n                    and collecting payments using the PayPal Api/SDK.`\n                ],\n                date: 'Summer, 2020',\n                link: {exists: true, git: true, url: 'https://github.com/signed-long/TapeFlip.app'}\n            },\n            {   title: 'Swift iPod App',\n                type: 'iOS',\n                techs: ['Swift', 'SwitUi', \"CoreData\"],\n                desc: [\n                    `iOS app that’s goal is to replicate the core features of\n                    an iPod with the songs a user has stored in the Files App.`,\n                    `I implemented a space and time efficient player object\n                    to handle playing and skipping though songs, as well as\n                    support for playlists, artists, and albums.`\n                ],\n                date: 'Spring, 2020',\n                link: {exists: true, git: true, url: 'https://github.com/signed-long/Swift-iPod'}\n            },\n            {   title: 'Little Free Library App',\n                type: 'Android',\n                techs: ['Java', 'Android'],\n                desc: [\n                    `A book sharing app for Android built in a group as the term project\n                    for my Intro to Software Engineering class.`,\n                    `The features that I implemented were, scanning\n                    a book’s barcode with the camera, getting a book’s information\n                    from the Google Books API, and storing this information using Firebase.`\n                ],\n                date: 'Fall, 2020',\n                link: {exists: true, git: true, url: 'https://github.com/CMPUT301F20T29/Bobs-Little-Free-Library'}\n            },\n            {   title: 'Portfolio Site',\n                type: 'Android',\n                techs: ['JavaScript', 'React', \"CSS\"],\n                desc: [\n                    `The website you're on right now! A simple desktop themed portfolio\n                    site built using React.`,\n                    `I find the best way for me to wrap my head around a new technology is\n                    to build a small project with it - so I made this site as my introduction to React.`\n                ],\n                date: 'Summer, 2020',\n                link: {exists: true, git: true, url: 'https://github.com/signed-long/react-desktop-portfolio'}\n            },\n\n        ]\n    }\n    render() {\n        return (\n            <>\n                <Window\n                    contentClass = 'window-content h-65'\n                    className={'projects-window' + (this.props.showing ? '' : ' d-none')}\n                    toggleWindowShowing={this.props.toggleWindowShowing}\n                >\n                    <h2>> projects</h2>\n                    {this.projects.map((project, i) =>\n                        <Project\n                            key={project.title}\n                            title={project.title}\n                            type={project.type}\n                            techs={project.techs}\n                            desc={project.desc}\n                            date={project.date}\n                            link={project.link}\n                    />)}\n                </Window>\n            </>\n\n        )\n    }\n}\n\nclass Project extends React.Component {\n    constructor () {\n        super();\n        this.state = {\n            projectExpanded: false\n        }\n        this.toggleDescShowing = this.toggleDescShowing.bind(this);\n    }\n    toggleDescShowing () {\n        // only hide desciption if user clicks on the project content block\n        // somewhere there isn't text\n        if (this.state.projectExpanded === true) {\n            if (document.querySelector(\".project-desc:hover\") === null) {\n                this.setState({ projectExpanded: false });\n            }\n        } else {\n            this.setState({ projectExpanded: true });\n        }\n    }\n    render() {\n        return (\n            <>\n                <div className='project-content' onClick={this.toggleDescShowing}>\n                    <p className='expand-icon'>\n                        {(this.state.projectExpanded ? '-' : '+')}\n                    </p>\n                    <p className='project-date'>{this.props.date}</p>\n                    <h5 className='project-title'>\n                        / {this.props.title}\n                        <a className={(this.props.link.exists ? '' : 'd-none')} href={this.props.link.url} target=\"__blank\">\n                            <img className='small-icon' src={(this.props.link.git ? 'gh.png' : 'link.png')} alt='link to project' />\n                        </a>\n                    </h5>\n                    {this.props.techs.map((tech, i) => <span key={tech} className='project-tech'> {tech} </span>)}\n                    <p id='project-desc' >\n                        {this.props.desc.map((desc, i) =>\n                            <p  key={i}\n                                className={\n                                     'project-desc' + (this.state.projectExpanded ? '' : ' d-none')\n                                }\n                            >\n                                {desc}\n                            </p>)\n                        }\n                    </p>\n\n\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Projects\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sidebar from './components/Sidebar';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport { Router } from \"@reach/router\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showingWindow: true,\n        }\n        this.toggleWindowShowing = this.toggleWindowShowing.bind(this);\n        this.openWindow = this.openWindow.bind(this);\n\n    }\n    toggleWindowShowing () {\n        this.setState(prevState => ({\n            showingWindow: !prevState.showingWindow\n        }));\n    }\n    openWindow() {\n        // opens window if it's not already showing\n        if (this.state.showingWindow === false) {\n            this.setState({ showingWindow: true });\n        }\n    }\n\n    render() {\n        const heart = '<3'\n        return (\n            <>\n                <Sidebar openWindow={this.openWindow}/>\n                <div className='window-container'>\n                    <Router>\n                        <About\n                            path=\"/\"\n                            showing={this.state.showingWindow}\n                            toggleWindowShowing={this.toggleWindowShowing}\n                        />\n                        <Projects\n                            path=\"/projects\"\n                            showing={this.state.showingWindow}\n                            toggleWindowShowing={this.toggleWindowShowing}\n                        />\n                    </Router>\n                </div>\n                <footer>\n                    built with {heart} by Michael Long /\n                    icons from <a href='https://icons8.com' target=\"__blank\">Icons8</a>\n                </footer>\n\n            </>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'))\n","import React from 'react';\nimport Window from './Window'\n\nclass Contact extends React.Component {\n    render() {\n        return (\n            <Window\n                contentClass = 'game-canvas '\n                className={'projects-window' + (this.props.showing ? '' : ' d-none')}\n                toggleWindowShowing={this.props.toggleWindowShowing}\n            >\n\n            </Window>\n        )\n    }\n}\n\n\nexport default Contact\n"],"sourceRoot":""}